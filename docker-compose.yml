version: '3.9'

volumes:
  DataVolume:
    name: 'prakticum_volume'
  pgadmin-data:
    name: 'pgadmin-data'

services:
  client:
    container_name: prakticum-client
    image: prakticum-client
    volumes:
      - DataVolume:/output:rw
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    restart: always
    ports:
      - '${CLIENT_PORT}:80'
    env_file:
      - ./.env
    networks:
      - prakticum

  server:
    container_name: prakticum-server
    image: prakticum-server
    volumes:
      - DataVolume:/app/client:ro
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    env_file:
      - ./.env
    networks:
      - prakticum
    depends_on:
      - postgres
      - client
    command: ./wait-for.sh postgres:${POSTGRES_PORT} -- node /app/server/index.js

  postgres:
    container_name: prakticum-database
    image: postgres:14
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    networks:
      - prakticum

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '8080:80'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - prakticum

networks:
  prakticum:
    driver: bridge
